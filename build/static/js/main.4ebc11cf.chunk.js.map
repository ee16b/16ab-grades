{"version":3,"sources":["ok-logo.svg","ScoreEntry.js","Row.js","Topic.js","GradeTable.js","FinalNeededScoreRow.js","FinalNeededScoreTable.js","config/elements.js","config/ee16a.js","GradePlanner.js","FutureCheckBox.js","LoginButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","valid","x","Number","isNaN","undefined","ScoreEntry","handleClick","e","stopPropagation","_this2","this","props","booleanValued","react_default","a","createElement","className","type","checked","value","onClick","onChange","readOnly","target","id","name","htmlFor","placeholder","min","step","Component","formatScore","score","places","arguments","length","parseFloat","toFixed","Math","max","toString","split","Row","collapsed","childrenCollapsed","future","ScoreEntry_ScoreEntry","plannedScore","val","maxScore","concat","style","paddingLeft","indent","aria-label","aria-hidden","Topic","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","state","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","schema","children","Symbol","iterator","next","done","elem","isTopic","lockedChildren","push","Row_Row","data","planned","plannedTotals","futureMaxScore","key","onFutureScoreChange","err","return","displayedMaxScore","Fragment","GradeTable","map","index","Topic_Topic","scoreHeader","scope","width","FinalNeededScoreRow","grade","FinalNeededScoreTable","i","needed","grades","header","range","b","out","cappedScore","Infinity","customCalculator","maxChildScores","child","maxFutureChildScores","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","reduce","Assignment","weighting","includes","BINS","GRADES","labCalculator","labScores","rawTotalLabScore","NaN","hwCalculator","hwScores","_hwScores","slicedToArray","totalRawScore","GradePlanner","scores","Homework","Labs","Participation","MT1","MT2","canDisplayFinalGrades","onSetCourseworkToMax","_computeNeededFinalSc","totalNonFinal","_ref3","_ref2","bin","neededScore","computeNeededFinalScore","_computeNeededFinalSc2","FutureCheckBox","LoginButton","_ref","role","src","logo","alt","height","ASSIGNMENTS","LOOKUP","initialize","toConsumableArray","lst","title","flatMap","letter","initializeLookup","assignment","extend","JSON","parse","stringify","_i","_Object$keys","keys","App","handleFutureCheckboxChange","plannedScores","handleFutureScoreChange","newScore","forceUpdate","recursivelyMaximize","topic","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","refresh","window","location","replace","handleSetCourseworkToMax","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","handleSetParticipationToMax","success","$","get","retry","curr","totals","childTotals","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","childTotal","computeTotals","limit","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","contents","onSetParticipationToMax","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ebc11cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ok-logo.86ffa05a.svg\";","import React, { Component } from \"react\";\nimport \"./ScoreEntry.css\";\n\nfunction valid(x) {\n    return !Number.isNaN(x) && (x !== undefined);\n}\n\nexport default class ScoreEntry extends Component {\n    handleClick = (e) => {\n        e.stopPropagation();\n    };\n\n    render() {\n        if (this.props.booleanValued) {\n            return (\n                <div className=\"custom-control custom-checkbox\">\n                    <input\n                        type=\"checkbox\"\n                        checked={!!this.props.value}\n                        className=\"custom-control-input\"\n                        onClick={this.handleClick}\n                        onChange={e => !this.props.readOnly\n                                && this.props.onChange(e.target.checked ? 1 : 0)\n                        }\n                        readOnly={this.props.readOnly}\n                        id={this.props.name}\n                    />\n                    <label className=\"custom-control-label\" htmlFor={this.props.name} />\n                </div>\n            );\n        } else {\n            return (\n                <input\n                    className=\"ScoreEntry\"\n                    type=\"number\"\n                    value={valid(this.props.value) ? this.props.value : \"\"}\n                    placeholder={valid(this.props.placeholder) ? this.props.placeholder : \"\"}\n                    min=\"0\"\n                    step=\"0.1\"\n                    onClick={this.handleClick}\n                    onChange={e => this.props.onChange(e.target.value)}\n                    readOnly={this.props.readOnly}\n                />\n            );\n        }\n    }\n}\n","import React from \"react\";\nimport \"./Row.css\";\nimport ScoreEntry from \"./ScoreEntry.js\";\n\nfunction formatScore(score, places = 1) {\n    return Number.parseFloat(score).toFixed(Math.max(places, (score.toString().split(\".\")[1] || \"\").length));\n}\n\nexport default function Row(props) {\n    let className = \"Row\";\n    if (props.collapsed) {\n        className += \" closed\";\n    }\n    if (props.childrenCollapsed !== undefined) {\n        className += \" pointable\";\n    }\n\n    const score = Number.isNaN(props.score) || props.future || props.booleanValued\n        ? (\n            <ScoreEntry\n                name={props.name}\n                value={props.plannedScore}\n                placeholder={props.placeholder}\n                readOnly={props.readOnly}\n                onChange={val => props.onChange(props.name, val)}\n                booleanValued={props.booleanValued}\n            />\n        ) : formatScore(props.score);\n\n    const maxScore = (!props.booleanValued && props.maxScore) ? ` / ${formatScore(props.maxScore)}` : \"\";\n\n    return (\n        <tr onClick={props.onClick} className={className}>\n            <td style={{ paddingLeft: 10 + 40 * props.indent }}>\n                {props.childrenCollapsed !== undefined ? (\n                    <button type=\"button\" className=\"close closeButton\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">{props.childrenCollapsed ? \"+\" : \"-\"}</span>\n                    </button>\n                ) : false}\n\n                <div className=\"collapse show\">\n                    {props.name}\n                </div>\n            </td>\n            <td>\n                <div className=\"collapse show\">\n                    {score}\n                    {maxScore}\n                </div>\n            </td>\n        </tr>\n    );\n}\n","import React, { Component } from \"react\";\nimport Row from \"./Row.js\";\n\nexport default class Topic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true,\n        };\n    }\n\n    toggleCollapse = () => {\n        this.setState(state => ({ collapsed: !state.collapsed }));\n    };\n\n    render() {\n        const rows = [];\n\n        const readOnly = false;\n\n        for (const elem of this.props.schema.children) {\n            if (!this.props.future && elem.future) {\n                continue;\n            }\n            if (!elem.isTopic || (elem.future && elem.lockedChildren)) {\n                rows.push(\n                    <Row\n                        name={elem.name}\n                        score={this.props.data[elem.name]}\n                        plannedScore={this.props.planned[elem.name]}\n                        placeholder={this.props.plannedTotals[elem.name]}\n                        booleanValued={elem.booleanValued}\n                        readOnly={!Number.isNaN(this.props.data[elem.name])}\n                        maxScore={elem.isTopic ? elem.futureMaxScore : elem.maxScore}\n                        future={elem.future}\n                        key={elem.name}\n                        indent={this.props.indent + 1}\n                        collapsed={this.props.collapsed || this.state.collapsed}\n                        onChange={this.props.onFutureScoreChange}\n                    />,\n                );\n            } else {\n                rows.push(\n                    <Topic\n                        schema={elem}\n                        data={this.props.data}\n                        planned={this.props.planned}\n                        plannedTotals={this.props.plannedTotals}\n                        readOnly={readOnly}\n                        key={elem.name}\n                        indent={this.props.indent + 1}\n                        collapsed={this.props.collapsed || this.state.collapsed}\n                        future={this.props.future}\n                        onFutureScoreChange={this.props.onFutureScoreChange}\n                    />,\n                );\n            }\n        }\n\n        const displayedMaxScore = this.props.future\n            ? this.props.schema.futureMaxScore : this.props.schema.maxScore;\n\n        return (\n            <>\n                <Row\n                    name={this.props.schema.name}\n                    score={this.props.data[this.props.schema.name]}\n                    plannedScore={this.props.planned[this.props.schema.name]}\n                    placeholder={this.props.plannedTotals[this.props.schema.name]}\n                    readOnly={this.props.readOnly}\n                    maxScore={displayedMaxScore}\n                    onClick={this.toggleCollapse}\n                    indent={this.props.indent}\n                    childrenCollapsed={this.state.collapsed}\n                    collapsed={this.props.collapsed}\n                    onChange={this.props.onFutureScoreChange}\n                />\n                {rows}\n            </>\n        );\n    }\n}\n","/* eslint-disable react/no-array-index-key */\nimport React from \"react\";\nimport Topic from \"./Topic.js\";\n\nexport default function GradeTable(props) {\n    const rows = props.schema.map((elem, index) => (\n        <Topic\n            schema={elem}\n            data={props.data}\n            planned={props.planned}\n            plannedTotals={props.plannedTotals}\n            indent={0}\n            key={index}\n            future={props.future}\n            onFutureScoreChange={props.onFutureScoreChange}\n        />\n    ));\n\n    const scoreHeader = props.future ? \"Expected / Maximum score eventually possible\" :\n        \"Current / Maximum score possible so far\";\n\n    return (\n        <table className=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th scope=\"col\" style={{ width: \"50%\" }}>Assignment</th>\n                    <th scope=\"col\" style={{ width: \"25%\" }}>{scoreHeader}</th>\n                </tr>\n            </thead>\n            <tbody>\n                { rows }\n            </tbody>\n        </table>\n    );\n}\n","import React from \"react\";\n\nexport default function FinalNeededScoreRow(props) {\n    return (\n        <tr>\n            <th scope=\"row\">{props.grade}</th>\n            <td>{props.score}</td>\n        </tr>\n    );\n}\n","import React from \"react\";\nimport FinalNeededScoreRow from \"./FinalNeededScoreRow.js\";\n\nexport default function FinalNeededScoreTable(props) {\n    const rows = [];\n    for (let i = 0; i !== props.needed.length; ++i) {\n        rows.push(<FinalNeededScoreRow key={i} grade={props.grades[i]} score={props.needed[i]} />);\n    }\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Grade</th>\n                    <th scope=\"col\">Minimum score needed on final</th>\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    );\n}\n","let header;\nlet scores;\n\nexport function setSchema(_header, _scores) {\n    header = _header;\n    scores = _scores;\n}\n\n/* eslint-disable no-param-reassign,dot-notation */\nexport function range(a, b) {\n    if (!b) {\n        b = a;\n        a = 0;\n    }\n    const out = [];\n    for (let i = a; i !== b; ++i) {\n        out.push(i);\n    }\n    return out;\n}\n\nexport function Topic(name, children, cappedScore = Infinity, customCalculator, lockedChildren = false) {\n    let future = true;\n    const maxChildScores = [];\n    for (const child of children) {\n        if (!child.future) {\n            future = false;\n            maxChildScores.push(child.maxScore);\n        }\n    }\n    const maxFutureChildScores = [];\n    for (const child of children) {\n        maxFutureChildScores.push(child.futureMaxScore);\n    }\n\n    let maxScore;\n    let futureMaxScore;\n\n    if (customCalculator) {\n        maxScore = Math.min(cappedScore, customCalculator(maxChildScores));\n        futureMaxScore = Math.min(cappedScore, customCalculator(maxFutureChildScores));\n    } else {\n        maxScore = Math.min(cappedScore, maxChildScores.reduce((a, b) => a + b, 0));\n        futureMaxScore = Math.min(cappedScore, maxFutureChildScores.reduce((a, b) => a + b, 0));\n    }\n    return {\n        isTopic: true,\n        name,\n        children,\n        maxScore,\n        futureMaxScore,\n        customCalculator,\n        future,\n        lockedChildren,\n    };\n}\n\nexport function Assignment(name, maxScore, weighting = 1, booleanValued = false) {\n    return {\n        isTopic: false,\n        name,\n        maxScore,\n        futureMaxScore: maxScore,\n        weighting,\n        future: !header.includes(name),\n        booleanValued,\n    };\n}\n\nexport function Always(elem) {\n    elem.future = false;\n    return elem;\n}\n","import {\n    Always, Assignment, range, Topic,\n} from \"./elements.js\";\n\nconst BINS = [300, 279, 270, 252, 225, 204, 195, 186, 174, 171, 165, 159, 0];\nconst GRADES = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"F\"];\n\nexport const COURSE_CODE = \"16A\";\n\nfunction labCalculator(labScores) {\n    const rawTotalLabScore = labScores.reduce((a, b) => a + b, 0);\n    if (Number.isNaN(rawTotalLabScore)) {\n        return NaN;\n    } else if (rawTotalLabScore === 9) {\n        return 45;\n    } else if (rawTotalLabScore === 8) {\n        return 42;\n    } else if (rawTotalLabScore === 7) {\n        return 22;\n    } else {\n        return 0;\n    }\n}\n\nfunction hwCalculator(hwScores) {\n    const [rawScore, , resubmissionBonus] = hwScores;\n    const totalRawScore = rawScore + resubmissionBonus;\n    if (Number.isNaN(totalRawScore)) {\n        return NaN;\n    } else if (totalRawScore >= 8) {\n        return 10;\n    } else {\n        return totalRawScore;\n    }\n}\n\nexport function createAssignments() {\n    return [\n        Topic(\"Raw Score\", [\n            Topic(\"Exams\", [\n                Assignment(\"Midterm 1\", 50),\n                Assignment(\"Midterm 2\", 50),\n                Assignment(\"Final\", 100),\n            ]),\n            Topic(\"Homework\", [\n                Topic(\"Raw Homework Scores\", [\n                    ...range(15).map(i => Topic(`Final Homework ${i} Score`, [\n                        Assignment(`Raw Self-Grade (HW ${i})`, 10),\n                        Assignment(`Resubmitted? (HW ${i})`, 1, 1, true),\n                        Assignment(`Resubmission Point Gain (HW ${i})`, 10),\n                    ], 10, hwCalculator, true)),\n                ]),\n                Topic(\"Reader Adjustment Factor\", [\n                    Assignment(\"Raw self-grades for selected problems\", 0),\n                    Assignment(\"Adjusted self-grades for selected problems\", 0),\n                ]),\n            ], 35, lst => lst.reduce((a, b) => a + b, 0) / 140 * 35),\n            Topic(\"Labs\", [\n                ...[\"Imaging 1\", \"Imaging 2\", \"Imaging 3\", \"Touch 1\", \"Touch 2\", \"Touch 3A\", \"Touch 3B\", \"APS 1\", \"APS 2\"].map(\n                    title => Always(Assignment(`${title}`, 1)),\n                ),\n            ], 45, labCalculator),\n            Topic(\"Participation\", [\n                ...range(16).flatMap(\n                    i => [...(i === 0 ? [] : [\"A\"]), \"B\"].map(\n                        letter => Assignment(`Discussion ${i}${letter}`, 1.25, 1.25, true),\n                    ),\n                ),\n            ], 20),\n        ]),\n    ];\n}\n\nexport function canDisplayFinalGrades(scores) {\n    const {\n        Homework, Labs, Participation, \"Midterm 1\": MT1, \"Midterm 2\": MT2,\n    } = scores;\n    return !Number.isNaN(Homework + Labs + Participation + MT1 + MT2);\n}\n\nexport function computeNeededFinalScore(scores) {\n    const {\n        Homework, Labs, Participation, \"Midterm 1\": MT1, \"Midterm 2\": MT2,\n    } = scores;\n    const totalNonFinal = Homework + Labs + Participation + MT1 + MT2;\n    const needed = [];\n    const grades = [];\n\n    for (const [bin, i] of BINS.map((val, index) => [val, index])) {\n        const neededScore = Math.max(0, bin - totalNonFinal);\n        if (neededScore <= 100) {\n            needed.push(neededScore);\n            grades.push(GRADES[i]);\n        }\n        if (neededScore === 0) {\n            break;\n        }\n    }\n\n    return [grades, needed];\n}\n\nexport function participationProvided() {\n    return true;\n}\n","import React from \"react\";\nimport FinalNeededScoreTable from \"./FinalNeededScoreTable.js\";\nimport {\n    canDisplayFinalGrades,\n    computeNeededFinalScore,\n    participationProvided,\n} from \"./config/ee16a.js\";\n\nexport default function GradePlanner(props) {\n    const { data: scores } = props;\n    if (!canDisplayFinalGrades(scores)) {\n        return (\n            <>\n                <div className=\"card\">\n                    <h5 className=\"card-header\">Grade Planning</h5>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Insufficient Data</h5>\n                        <p className=\"card-text\">\n                            You need to specify your expected assignment scores (except for the\n                            final!) in the below table to enable grade planning.\n                        </p>\n                        <p>\n                            Or click the button to set them all to the maximum (including extra\n                            credit)!\n                        </p>\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"button\"\n                            onClick={props.onSetCourseworkToMax}\n                        >\n                            Set all unknown non-final scores to maximum\n                        </button>\n                    </div>\n                </div>\n                <br />\n            </>\n        );\n    }\n\n    const [grades, needed] = computeNeededFinalScore(scores);\n\n    if (!participationProvided(scores)) {\n        return (\n            <>\n                <div className=\"card\">\n                    <h5 className=\"card-header\">Grade Planning</h5>\n                    <div className=\"card-body\">\n                        <FinalNeededScoreTable\n                            grades={grades}\n                            needed={needed}\n                        />\n                        <p className=\"card-text\">\n                            To take exam recovery points into account, specify\n                            an estimate of your participation credits. Or click the button to set\n                            them all to the maximum!\n                        </p>\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"button\"\n                            onClick={props.onSetParticipationToMax}\n                        >\n                            Set all unknown participation credits to maximum\n                        </button>\n                    </div>\n                </div>\n                <br />\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"card\">\n                    <h5 className=\"card-header\">Grade Planning</h5>\n                    <div className=\"card-body\">\n                        <FinalNeededScoreTable\n                            grades={grades}\n                            needed={needed}\n                        />\n                    </div>\n                </div>\n                <br />\n            </>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default function FutureCheckBox(props) {\n    return (\n        <div className=\"custom-control custom-checkbox\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"futureCheckBox\" checked={props.checked} onChange={props.onChange} />\n            <label className=\"custom-control-label\" htmlFor=\"futureCheckBox\">\n                Show unreleased / ungraded assignments and enable grade planning.\n            </label>\n        </div>\n    );\n}\n","import React from \"react\";\nimport logo from \"./ok-logo.svg\";\n\nexport default function LoginButton({ onClick }) {\n    return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n            You are not logged in with an account that is registered for this class.\n            Try logging in with a valid okpy account.\n            <button\n                className=\"mt-3 btn btn-lg btn-warning btn-block\"\n                type=\"button\"\n                onClick={onClick}\n            >\nLog in with\n                {\" \"}\n                <img\n                    src={logo}\n                    alt=\"Log in with OK\"\n                    style={{ height: \"1.5em\", width: \"1.5em\" }}\n                />\n            </button>\n        </div>\n    );\n}\n","/* eslint-disable no-param-reassign,dot-notation */\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\nimport \"./App.css\";\nimport $ from \"jquery\";\n\nimport GradeTable from \"./GradeTable.js\";\nimport GradePlanner from \"./GradePlanner.js\";\nimport FutureCheckBox from \"./FutureCheckBox.js\";\nimport { COURSE_CODE, createAssignments } from \"./config/ee16a.js\";\nimport { setSchema } from \"./config/elements.js\";\nimport LoginButton from \"./LoginButton.js\";\n\nlet ASSIGNMENTS = [];\n\nlet LOOKUP = {};\n\nfunction initialize(header, scores) {\n    setSchema(header, scores);\n    ASSIGNMENTS = createAssignments();\n    LOOKUP = {};\n    for (const assignment of ASSIGNMENTS) {\n        initializeLookup(assignment);\n    }\n}\n\nfunction initializeLookup(assignment) {\n    LOOKUP[assignment.name] = assignment;\n    if (assignment.isTopic) {\n        for (const child of assignment.children) {\n            initializeLookup(child);\n        }\n    }\n}\n\nfunction extend(scores) {\n    const out = JSON.parse(JSON.stringify(scores));\n    for (const key of Object.keys(LOOKUP)) {\n        if (out[key] === undefined) {\n            out[key] = NaN;\n        }\n    }\n    return out;\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scores: [],\n            plannedScores: [],\n            future: false,\n            success: false,\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            success, retry, header, data,\n        } = await $.get(\"./query/\");\n        const scores = {};\n        if (success) {\n            this.setState({ success: true });\n\n            initialize(header, data);\n\n            for (let i = 0; i !== header.length; ++i) {\n                if (LOOKUP[header[i]]) {\n                    scores[header[i]] = data[i];\n                }\n            }\n        } else if (retry) {\n            this.refresh();\n        }\n        this.setState({ scores, plannedScores: extend(scores) });\n    }\n\n    handleFutureCheckboxChange = () => {\n        this.setState(state => ({ future: !state.future, plannedScores: extend(state.scores) }));\n    };\n\n    handleFutureScoreChange = (name, newScore) => {\n        this.state.plannedScores[name] = newScore === \"\" ? NaN : newScore;\n        this.forceUpdate(); // sorry!\n    };\n\n    recursivelyMaximize = (topic, plannedScores) => {\n        if (topic.isTopic) {\n            for (const child of topic.children) {\n                this.recursivelyMaximize(child, plannedScores);\n            }\n        } else if (topic.name !== \"Final\" && Number.isNaN(plannedScores[topic.name])) {\n            plannedScores[topic.name] = topic.maxScore;\n        }\n    };\n\n    refresh = () => {\n        window.location.replace(\"./login\");\n    };\n\n    handleSetCourseworkToMax = () => {\n        for (const assignment of ASSIGNMENTS) {\n            this.recursivelyMaximize(assignment, this.state.plannedScores);\n        }\n        this.forceUpdate();\n    };\n\n    handleSetParticipationToMax = () => {\n        this.recursivelyMaximize(LOOKUP[\"Participation Credits\"], this.state.plannedScores);\n        this.forceUpdate();\n    };\n\n    computeTotals(curr, scores, totals) {\n        if (curr.future && !this.state.future) {\n            return 0;\n        }\n        if (!curr.isTopic) {\n            totals[curr.name] = (scores[curr.name] !== undefined)\n                ? Number.parseFloat(scores[curr.name]) : NaN;\n            return totals[curr.name] * curr.weighting;\n        }\n\n        const childTotals = [];\n\n        let out = 0;\n        for (const child of curr.children) {\n            const childTotal = this.computeTotals(child, scores, totals);\n            out += childTotal;\n            childTotals.push(childTotal);\n        }\n\n        if (curr.customCalculator) {\n            out = curr.customCalculator(childTotals);\n        }\n\n        const limit = this.state.future ? curr.futureMaxScore : curr.maxScore;\n\n        if (limit) {\n            out = Math.min(out, limit);\n        }\n\n        totals[curr.name] = out;\n\n        if (scores[curr.name] !== undefined\n            && !Number.isNaN(Number.parseFloat(scores[curr.name]))) {\n            totals[curr.name] = Number.parseFloat(scores[curr.name]);\n            return totals[curr.name];\n        }\n\n        return out;\n    }\n\n    render() {\n        const totals = {};\n        const plannedTotals = {};\n\n        for (const assignment of ASSIGNMENTS) {\n            this.computeTotals(assignment, this.state.scores, totals);\n            this.computeTotals(assignment, this.state.plannedScores, plannedTotals);\n        }\n\n        const contents = this.state.success\n            ? (\n                <>\n                    <FutureCheckBox\n                        onChange={this.handleFutureCheckboxChange}\n                        checked={this.state.future}\n                    />\n                    <br />\n                    {this.state.future && (\n                        <GradePlanner\n                            data={plannedTotals}\n                            onSetCourseworkToMax={this.handleSetCourseworkToMax}\n                            onSetParticipationToMax={this.handleSetParticipationToMax}\n                        />\n                    )}\n                    <GradeTable\n                        schema={ASSIGNMENTS}\n                        data={totals}\n                        planned={this.state.plannedScores}\n                        plannedTotals={plannedTotals}\n                        future={this.state.future}\n                        onFutureScoreChange={this.handleFutureScoreChange}\n                    />\n                </>\n            )\n            : <LoginButton onClick={this.refresh} />;\n\n        return (\n            <div className=\"App container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <br />\n                        <h1 className=\"display-4\">\n                            <strong>{COURSE_CODE}</strong>\n                            {\" \"}\n                            Status Check\n                        </h1>\n                        {contents}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        ReactDOM.render(\n            <NextApp />,\n            document.getElementById(\"root\"),\n        );\n    });\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}